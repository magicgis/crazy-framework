/* Copyright (c) 2011 SKTelecom, Inc.
 * All right reserved.
 * http://www.skt.com/
 * This software is the confidential and proprietary information of SKTelecom
 * , Inc. You shall not disclose such Confidential Information and
 * shall use it only in accordance with the terms of the license agreement
 * you entered into with SKTtelecom.
 *
 * Desc :  .
 * Service Name : CLS.
 * Author  : .
 * Date    : 2011. 2. 28 오후 2:53:00.
 * File   : ValidatorUtils.java
*/
package com.skt.cls.framework.utils;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;

/**
 * The Class ValidatorUtils.
 */
public class ValidatorUtils  extends ValidationUtils{
	
	/** The Constant logger. */
	private static final Logger logger = LoggerFactory
			.getLogger(ValidationUtils.class);
	
	
	/**
	 * <p>
	 * Validate를 수행할 DTO의 필드에 값이 없을 경우 error 설정을 한다.
	 * </p>
	 * 
	 * @param errors 스프링에서 제공하는 Validation Error.
	 * @param field DTO 오브젝트에 선언된 필드명.
	 * @param code 메세지 에러 코드
	 */
	public static void notNull (Errors errors, String field, String code ) {
		String value = (String)errors.getFieldValue(field);
		if(StringUtils.isEmpty(value)) {
			errors.rejectValue(field, code);
		}
	}
	
	/**
	 * <p>
	 * 입력 값이 "0"일 경우 error 설정을 한다.
	 * </p>
	 * 
	 * @param field 필드 명
	 * @param code 에러 코드
	 */
	public static void notZeroNumber (Errors errors, String field, String code ) {
		String value = (String)errors.getFieldValue(field);
		Integer parseValue = new Integer(value);
		if(parseValue <= 0) {
			errors.rejectValue(field, code);
		}
	}
	

	/**
	 * <p>
	 * 주민등록 형식에 맞지 않을 경우 error를 설정한다.
	 * </p>
	 * Not zero number.
	 * 
	 * @param errors the errors
	 * @param field1 the 주민 번호 앞자리 필드명
	 * @param field2 the 주민 번호 뒷자리 필드명
	 * @param code the code
	 */
	public static void isJumin (Errors errors, String field1, String field2,  String code ) {
		String value1 = (String)errors.getFieldValue(field1);
		String value2 = (String)errors.getFieldValue(field2);
		
		if(!StringUtil.isJumin(value1, value2)) {
			errors.rejectValue(field1, code);
		}
	}
	
	/**
	 * <p>
	 * 주민등록 형식에 맞지 않을 경우 error를 설정한다.
	 * </p>
	 * 
	 * @param errors the errors
	 * @param field1 the 주민 번호 필드명
	 * @param code the code
	 */
	public static void isJumin (Errors errors, String field1,  String code ) {
		String value1 = (String)errors.getFieldValue(field1);
		
		if(!StringUtil.isJumin(value1)) {
			errors.rejectValue(field1, code);
		}
	}
	
	
	/**
	 * <p>
	 * 영문 이외의 숫자,문자가 올경우 error를 설정 한다.
	 * </p>
	 * 
	 * @param errors the errors
	 * @param field 필드 명
	 * @param code 에러 코드
	 */
	public static void isString (Errors errors, String field, String code ) {
		String value = (String)errors.getFieldValue(field);
		if(!StringUtil.isString(value)) {
			errors.rejectValue(field, code);
		}
	}
	
	/**
	 * <p>
	 * 숫자 외의 문자가 올 경우 error를 설정 한다.
	 * </p>
	 * 
	 * @param errors the errors
	 * @param field 필드 명
	 * @param code 에러 코드
	 */
	public static void isNumber (Errors errors, String field, String code ) {
		String value = (String)errors.getFieldValue(field);
		if(!StringUtil.isNumber(value)) {
			errors.rejectValue(field, code);
		}
	}
	
	/**
	 * <p>
	 * 영문 또는 숫자외에 문자가 올경우 error를 설정 한다.
	 * </p>
	 * 
	 * @param errors the errors
	 * @param field 필드 명
	 * @param code 에러 코드
	 */
	public static void isStringNumber (Errors errors, String field, String code ) {
		String value = (String)errors.getFieldValue(field);
		if(!StringUtil.isStringNumber(value)) {
			errors.rejectValue(field, code);
		}
	}
	
	/**
	 * <p>
	 * 이메일 형식이 아닐 경우 error를 설정 한다.
	 * </p>
	 * 
	 * @param errors the errors
	 * @param field 필드 명
	 * @param code 에러 코드
	 */
	public static void isEmail (Errors errors, String field, String code ) {
		String value = (String)errors.getFieldValue(field);
		if(!StringUtil.isEmail(value)) {
			errors.rejectValue(field, code);
		}
	}
	
	
	
}
